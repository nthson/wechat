package com.juns.wechat;

import java.util.Timer;
import java.util.TimerTask;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.text.TextUtils;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.easemob.chat.CmdMessageBody;
import com.easemob.chat.EMChat;
import com.easemob.chat.EMChatManager;
import com.easemob.chat.EMConversation;
import com.easemob.chat.EMMessage;
import com.easemob.chat.EMMessage.ChatType;
import com.easemob.util.EMLog;
import com.juns.wechat.chat.ChatActivity;
import com.juns.wechat.common.Utils;
import com.juns.wechat.dialog.WarnTipDialog;
import com.juns.wechat.dialog.TitleMenu.ActionItem;
import com.juns.wechat.dialog.TitleMenu.TitlePopup;
import com.juns.wechat.dialog.TitleMenu.TitlePopup.OnItemOnClickListener;
import com.juns.wechat.view.fragment.Fragment_Dicover;
import com.juns.wechat.view.fragment.Fragment_Friends;
import com.juns.wechat.view.fragment.Fragment_Msg;
import com.juns.wechat.view.fragment.Fragment_Profile;
import com.juns.wechat.zxing.CaptureActivity;

public class MainActivity extends FragmentActivity implements OnClickListener {
	private TextView menu_tansuo, menu_xiaoxi, menu_tongxunlu, menu_my,
			txt_title;
	private ImageView img_right;
	private WarnTipDialog Tipdialog;
	private NewMessageBroadcastReceiver msgReceiver;
	protected static final String TAG = "MainActivity";
	private TitlePopup titlePopup;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		findViewById();
		initViews();
		// initVersion();
		setOnListener();
		initPopWindow();
		initReceiver();
	}

	private void initPopWindow() {
		// 实例化标题栏弹窗
		titlePopup = new TitlePopup(this, LayoutParams.WRAP_CONTENT,
				LayoutParams.WRAP_CONTENT);
		titlePopup.setItemOnClickListener(onitemClick);
		// 给标题栏弹窗添加子类
		titlePopup.addAction(new ActionItem(this, "发起群聊",
				R.drawable.icon_menu_group));
		titlePopup.addAction(new ActionItem(this, "添加朋友",
				R.drawable.icon_menu_addfriend));
		titlePopup.addAction(new ActionItem(this, "扫一扫",
				R.drawable.icon_menu_sao));
	}

	private OnItemOnClickListener onitemClick = new OnItemOnClickListener() {

		@Override
		public void onItemClick(ActionItem item, int position) {
			// mLoadingDialog.show();
			switch (position) {
			case 0:// 发起群聊
				Utils.showLongToast(MainActivity.this, "发起群聊");
				break;
			case 1:// 添加朋友
				Utils.showLongToast(MainActivity.this, "添加朋友");
				break;
			case 2:// 扫一扫
				Intent i = new Intent(MainActivity.this, CaptureActivity.class);
				i.putExtra("isNoCute", true);
				startActivityForResult(i, 100);
				overridePendingTransition(R.anim.push_left_in,
						R.anim.push_left_out);
				break;
			default:
				break;
			}
		}
	};

	@Override
	protected void onResume() {
		super.onResume();
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
	}

	private void findViewById() {
		txt_title = (TextView) findViewById(R.id.txt_title);
		menu_xiaoxi = (TextView) findViewById(R.id.menu_msg);
		menu_tongxunlu = (TextView) findViewById(R.id.menu_tongxunlu);
		menu_my = (TextView) findViewById(R.id.menu_my);
		menu_tansuo = (TextView) findViewById(R.id.menu_faxian);
		img_right = (ImageView) findViewById(R.id.img_right);
	}

	private void initViews() {
		// 设置消息页面为初始页面
		img_right.setVisibility(View.VISIBLE);
		img_right.setImageResource(R.drawable.icon_add);
		getSupportFragmentManager().beginTransaction()
				.add(R.id.realtabcontent, new Fragment_Msg()).commit();
	}

	private void setOnListener() {
		menu_tansuo.setOnClickListener(this);
		menu_xiaoxi.setOnClickListener(this);
		menu_tongxunlu.setOnClickListener(this);
		menu_my.setOnClickListener(this);
		img_right.setOnClickListener(this);

	}

	private int keyBackClickCount = 0;

	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		if (keyCode == KeyEvent.KEYCODE_BACK) {
			switch (keyBackClickCount++) {
			case 0:
				Toast.makeText(this, "再次按返回键退出", Toast.LENGTH_SHORT).show();
				Timer timer = new Timer();
				timer.schedule(new TimerTask() {
					@Override
					public void run() {
						keyBackClickCount = 0;
					}
				}, 3000);
				break;
			case 1:
				EMChatManager.getInstance().logout();// 退出环信聊天
				App.getInstance2().exit();
				finish();
				overridePendingTransition(R.anim.push_up_in, R.anim.push_up_out);
				break;
			}
			return true;
		}
		return super.onKeyDown(keyCode, event);
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.menu_faxian:
			initMenuItem(R.id.menu_faxian);
			break;
		case R.id.menu_tongxunlu:
			initMenuItem(R.id.menu_tongxunlu);
			break;
		case R.id.menu_msg:
			initMenuItem(R.id.menu_msg);
			break;
		case R.id.menu_my:
			initMenuItem(R.id.menu_my);
			break;
		case R.id.img_right:
			titlePopup.show(findViewById(R.id.layout_bar));
			break;
		default:
			break;
		}
	}

	// 初始化导航菜单
	private void initMenuItem(int id) {
		img_right.setVisibility(View.GONE);
		Drawable top = getResources().getDrawable(R.drawable.menu_chat_nor);
		menu_xiaoxi.setCompoundDrawablesWithIntrinsicBounds(null, top, null,
				null);
		menu_xiaoxi.setTextColor(getResources().getColor(R.color.black1));
		top = getResources().getDrawable(R.drawable.menu_dicover_nor);
		menu_tansuo.setCompoundDrawablesWithIntrinsicBounds(null, top, null,
				null);
		menu_tansuo.setTextColor(getResources().getColor(R.color.black1));
		top = getResources().getDrawable(R.drawable.menu_context_nor);
		menu_tongxunlu.setCompoundDrawablesWithIntrinsicBounds(null, top, null,
				null);
		menu_tongxunlu.setTextColor(getResources().getColor(R.color.black1));

		top = getResources().getDrawable(R.drawable.menu_me_nor);
		menu_my.setCompoundDrawablesWithIntrinsicBounds(null, top, null, null);
		menu_my.setTextColor(getResources().getColor(R.color.black1));
		switch (id) {
		case R.id.menu_faxian:
			txt_title.setText("发现");
			top = getResources().getDrawable(R.drawable.menu_dicover_pre);
			menu_tansuo.setCompoundDrawablesWithIntrinsicBounds(null, top,
					null, null);
			menu_tansuo.setTextColor(getResources().getColor(R.color.greeny));
			getSupportFragmentManager().beginTransaction()
					.replace(R.id.realtabcontent, new Fragment_Dicover())
					.commit();
			break;
		case R.id.menu_tongxunlu:
			txt_title.setText("通讯录");
			top = getResources().getDrawable(R.drawable.menu_context_pre);
			menu_tongxunlu.setCompoundDrawablesWithIntrinsicBounds(null, top,
					null, null);
			menu_tongxunlu
					.setTextColor(getResources().getColor(R.color.greeny));
			getSupportFragmentManager().beginTransaction()
					.replace(R.id.realtabcontent, new Fragment_Friends())
					.commit();
			break;
		case R.id.menu_msg:
			img_right.setVisibility(View.VISIBLE);
			txt_title.setText("微信");
			top = getResources().getDrawable(R.drawable.menu_chat_pre);
			menu_xiaoxi.setCompoundDrawablesWithIntrinsicBounds(null, top,
					null, null);
			menu_xiaoxi.setTextColor(getResources().getColor(R.color.greeny));
			getSupportFragmentManager().beginTransaction()
					.replace(R.id.realtabcontent, new Fragment_Msg()).commit();
			break;
		case R.id.menu_my:
			txt_title.setText("我");
			top = getResources().getDrawable(R.drawable.menu_me_pre);
			menu_my.setCompoundDrawablesWithIntrinsicBounds(null, top, null,
					null);
			menu_my.setTextColor(getResources().getColor(R.color.greeny));
			getSupportFragmentManager().beginTransaction()
					.replace(R.id.realtabcontent, new Fragment_Profile())
					.commit();
			break;
		default:
			break;
		}
	}

	private void initVersion() {
		// TODO 检查版本更新
		String versionInfo = Utils.getValue(this, Constants.VersionInfo);
		if (!TextUtils.isEmpty(versionInfo)) {
			Tipdialog = new WarnTipDialog(this,
					"发现新版本：  1、更新啊阿三达到阿德阿   2、斯顿阿斯顿撒旦？");
			Tipdialog.setBtnOkLinstener(onclick);
			Tipdialog.show();
		}
	}

	private DialogInterface.OnClickListener onclick = new DialogInterface.OnClickListener() {

		@Override
		public void onClick(DialogInterface dialog, int which) {
			Utils.showLongToast(MainActivity.this, "正在下载...");// TODO
			Tipdialog.dismiss();
		}
	};

	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		if (resultCode == RESULT_OK && requestCode == 100) {
			String result = data.getExtras().getString("result");
			Log.e("", "扫描结果为：" + result);
			if (TextUtils.isEmpty(result)) {
				Utils.showLongToast(MainActivity.this, "二维码信息错误！");
				return;
			} else {
				if (result.startsWith("JUNS@WeChat")) {
					String[] name = result.split(":");
					Utils.showLongToast(this, "扫描到的好友为：" + name[1]);
				} else if (result.startsWith("http://")
						|| result.startsWith("https://")) {
					Uri uri = Uri.parse(result);
					Intent intent = new Intent(Intent.ACTION_VIEW, uri);
					startActivity(intent);
				} else {
					Utils.showLongToast(this, "扫描结果为：" + result);
				}
			}
		}
	}

	private void initReceiver() {
		// 注册一个接收消息的BroadcastReceiver
		msgReceiver = new NewMessageBroadcastReceiver();
		IntentFilter intentFilter = new IntentFilter(EMChatManager
				.getInstance().getNewMessageBroadcastAction());
		intentFilter.setPriority(3);
		registerReceiver(msgReceiver, intentFilter);

		// 注册一个ack回执消息的BroadcastReceiver
		IntentFilter ackMessageIntentFilter = new IntentFilter(EMChatManager
				.getInstance().getAckMessageBroadcastAction());
		ackMessageIntentFilter.setPriority(3);
		registerReceiver(ackMessageReceiver, ackMessageIntentFilter);

		// 注册一个透传消息的BroadcastReceiver
		IntentFilter cmdMessageIntentFilter = new IntentFilter(EMChatManager
				.getInstance().getCmdMessageBroadcastAction());
		cmdMessageIntentFilter.setPriority(3);
		registerReceiver(cmdMessageReceiver, cmdMessageIntentFilter);
		// 通知sdk，UI 已经初始化完毕，注册了相应的receiver和listener, 可以接受broadcast了
		EMChat.getInstance().setAppInited();
	}

	/**
	 * 新消息广播接收者
	 * 
	 * 
	 */
	private class NewMessageBroadcastReceiver extends BroadcastReceiver {
		@Override
		public void onReceive(Context context, Intent intent) {
			// 主页面收到消息后，主要为了提示未读，实际消息内容需要到chat页面查看

			String from = intent.getStringExtra("from");
			// 消息id
			String msgId = intent.getStringExtra("msgid");
			EMMessage message = EMChatManager.getInstance().getMessage(msgId);
			if (ChatActivity.activityInstance != null) {
				if (message.getChatType() == ChatType.GroupChat) {
					if (message.getTo().equals(
							ChatActivity.activityInstance.getToChatUsername()))
						return;
				} else {
					if (from.equals(ChatActivity.activityInstance
							.getToChatUsername()))
						return;
				}
			}

			// 注销广播接收者，否则在ChatActivity中会收到这个广播
			abortBroadcast();
		}
	}

	/**
	 * 消息回执BroadcastReceiver
	 */
	private BroadcastReceiver ackMessageReceiver = new BroadcastReceiver() {

		@Override
		public void onReceive(Context context, Intent intent) {
			abortBroadcast();

			String msgid = intent.getStringExtra("msgid");
			String from = intent.getStringExtra("from");

			EMConversation conversation = EMChatManager.getInstance()
					.getConversation(from);
			if (conversation != null) {
				// 把message设为已读
				EMMessage msg = conversation.getMessage(msgid);

				if (msg != null) {

					if (ChatActivity.activityInstance != null) {
						if (msg.getChatType() == ChatType.Chat) {
							if (from.equals(ChatActivity.activityInstance
									.getToChatUsername()))
								return;
						}
					}

					msg.isAcked = true;
				}
			}
		}
	};

	/**
	 * 透传消息BroadcastReceiver
	 */
	private BroadcastReceiver cmdMessageReceiver = new BroadcastReceiver() {

		@Override
		public void onReceive(Context context, Intent intent) {
			abortBroadcast();
			EMLog.d(TAG, "收到透传消息");
			// 获取cmd message对象
			String msgId = intent.getStringExtra("msgid");
			EMMessage message = intent.getParcelableExtra("message");
			// 获取消息body
			CmdMessageBody cmdMsgBody = (CmdMessageBody) message.getBody();
			String action = cmdMsgBody.action;// 获取自定义action

			// 获取扩展属性 此处省略
			// message.getStringAttribute("");
			EMLog.d(TAG,
					String.format("透传消息：action:%s,message:%s", action,
							message.toString()));
			String st9 = getResources().getString(
					R.string.receive_the_passthrough);
			Toast.makeText(MainActivity.this, st9 + action, Toast.LENGTH_SHORT)
					.show();
		}
	};
}